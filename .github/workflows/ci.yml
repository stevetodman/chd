name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    defaults:
      run:
        working-directory: chd-qbank
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a25f0e4a72 # v4.1.6
      - uses: actions/setup-node@5e21ff4d9f0f45a73d87940c49aa5addf5328d0f # v4.0.2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'chd-qbank/package-lock.json'
      - uses: dorny/paths-filter@8d6a028232b48cf9449877dc87aef5d30daeb4c3 # v3.0.2
        id: changes
        with:
          filters: |
            migrations:
              - 'chd-qbank/supabase/migrations/**'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint -- --max-warnings=0
      - name: Type check
        run: npm run typecheck
      - name: Test
        run: npm run test -- --run --reporter=dot
      - run: npm run build
      - run: npm run notice
      - name: Generate license inventory
        working-directory: ..
        run: npm run license:inventory
      - name: Enforce license policy
        working-directory: ..
        run: npm run license:check
      - name: Upload unit test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-coverage
          path: chd-qbank/coverage
          if-no-files-found: ignore
      - name: Publish coverage summary
        if: always()
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = 'coverage/coverage-summary.json';
          if (!fs.existsSync(path)) {
            console.log('No coverage summary found.');
            process.exit(0);
          }
          const summary = JSON.parse(fs.readFileSync(path, 'utf8'));
          const total = summary.total;
          const lines = [
            '| Metric | % | Covered / Total |',
            '| --- | --- | --- |',
            `| Statements | ${total.statements.pct}% | ${total.statements.covered} / ${total.statements.total} |`,
            `| Branches | ${total.branches.pct}% | ${total.branches.covered} / ${total.branches.total} |`,
            `| Functions | ${total.functions.pct}% | ${total.functions.covered} / ${total.functions.total} |`,
            `| Lines | ${total.lines.pct}% | ${total.lines.covered} / ${total.lines.total} |`,
          ].join('\n');
          fs.writeFileSync(process.env.GITHUB_STEP_SUMMARY, `## Coverage Summary\n\n${lines}\n`);
          NODE
      - name: Generate SBOM (CycloneDX)
        if: always()
        run: |
          mkdir -p compliance-artifacts
          npx --yes @cyclonedx/cyclonedx-npm --output-file compliance-artifacts/chd-qbank-cyclonedx.json --output-format json
      - name: Capture npm audit report
        if: always()
        run: |
          mkdir -p compliance-artifacts
          npm audit --json > compliance-artifacts/npm-audit.json || true
      - name: Upload compliance artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compliance-artifacts
          path: chd-qbank/compliance-artifacts
      - name: Check Supabase migration safety
        if: steps.changes.outputs.migrations == 'true'
        run: npm run check:migration-safety
      - name: Ensure NOTICE and license inventory are current
        working-directory: ..
        run: git diff --exit-code

  edge-function-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: chd-qbank/supabase/functions/signup-with-code
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a25f0e4a72 # v4.1.6
      - uses: denoland/setup-deno@db94c30a7d69dbab71c373b72ed9d6d8d3e15794 # v1.1.1
        with:
          deno-version: v1.x
      - run: deno lint
      - run: deno check index.ts
